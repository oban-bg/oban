name: ci

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'guides/**'
  pull_request:
    paths-ignore:
      - 'guides/**'

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        include:
          - pair:
              elixir: '1.9'
              otp: '21.3'
              postgres: '9.6-alpine'
          - pair:
              elixir: '1.11'
              otp: '23.2'
              postgres: '13.2-alpine'

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:${{matrix.pair.postgres}}
        env:
          POSTGRES_DB: oban_test
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432/tcp

    steps:
      - uses: actions/checkout@v2

      - uses: erlef/setup-elixir@v1
        with:
          otp-version: ${{matrix.pair.otp}}
          elixir-version: ${{matrix.pair.elixir}}

      - uses: actions/cache@v1
        with:
          key: ${{runner.os}}-${{matrix.pair.otp}}-${{matrix.pair.elixir}}-mix-${{hashFiles(format('{0}{1}', github.workspace, '/mix.lock'))}}
          path: _build

      - name: Run mix deps.get
        run: mix deps.get --only test

      - name: Run mix compile
        env:
          MIX_ENV: test
        run: mix compile --warnings-as-errors

      - name: Run mix ecto.migrate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:${{job.services.postgres.ports[5432]}}/oban_test
          MIX_ENV: test
        run: mix ecto.migrate -r Oban.Test.Repo

      - name: Run mix ci
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:${{job.services.postgres.ports[5432]}}/oban_test
          MIX_ENV: test
        run: mix ci
