name: ci

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'guides/**'
  pull_request:
    paths-ignore:
      - 'guides/**'

jobs:
  ci:
    strategy:
      matrix:
        elixir: ['1.10', '1.11']
        otp: ['23.1']
        postgres: ['12.5-alpine', '13.1-alpine']

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:${{ matrix.postgres }}
        env:
          POSTGRES_DB: oban_test
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432/tcp

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - uses: actions/cache@v1
        with:
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          path: _build

      - name: Run mix deps.get
        run: mix deps.get

      - name: Run mix compile
        env:
          MIX_ENV: test
        run: mix compile --warnings-as-errors

      - name: Run mix ecto.migrate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/oban_test
          MIX_ENV: test
        run: mix ecto.migrate -r Oban.Test.Repo

      - name: Run mix ci
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/oban_test
          MIX_ENV: test
        run: mix ci
